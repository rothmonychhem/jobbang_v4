{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEntrepriseContext } from \"./useEntrepriseContext\";\nexport const useInscriptionEntreprise = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useEntrepriseContext();\n  const inscriptionEnt = async (nom_entreprise, nom_employeur, email_entreprise, telephone, adresse, mot_de_passeEntreprise) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/entreprise/inscriptionEntreprise', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nom_entreprise,\n        nom_employeur,\n        email_entreprise,\n        telephone,\n        adresse,\n        mot_de_passeEntreprise\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      localStorage.setItem('entreprise', JSON.stringify(json));\n      dispatch({\n        type: 'LOGINENTREPRISE',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    inscriptionEnt,\n    isLoading,\n    error\n  };\n};\n_s(useInscriptionEntreprise, \"yWEmr6ERxyL6L3HXmkAVx6ujdNY=\", false, function () {\n  return [useEntrepriseContext];\n});","map":{"version":3,"names":["useState","useEntrepriseContext","useInscriptionEntreprise","_s","error","setError","isLoading","setIsLoading","dispatch","inscriptionEnt","nom_entreprise","nom_employeur","email_entreprise","telephone","adresse","mot_de_passeEntreprise","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/Lina/jobbang_v4-main/server/client/src/hooks/useInscriptionEntreprise.js"],"sourcesContent":["import  { useState } from \"react\";\nimport { useEntrepriseContext } from \"./useEntrepriseContext\"; \n\n\n\n\nexport const useInscriptionEntreprise = () => {\n\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const {dispatch} = useEntrepriseContext()\n\n\n    const inscriptionEnt = async (\n        nom_entreprise, \n        nom_employeur,\n        email_entreprise,\n        telephone,\n        adresse,\n        mot_de_passeEntreprise)=> {\n            setIsLoading(true)\n            setError(null)\n\n            const response  = await fetch('/api/entreprise/inscriptionEntreprise', {\n                method:'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    nom_entreprise, \n                    nom_employeur,\n                    email_entreprise,\n                    telephone,\n                    adresse,\n                    mot_de_passeEntreprise})\n            })\n\n            const json = await response.json()\n\n            if(!response.ok){\n                setIsLoading(false)\n                setError(json.error)\n            }\n            if(response.ok){\n    \n                    localStorage.setItem('entreprise', JSON.stringify(json))\n\n                    dispatch ({type:'LOGINENTREPRISE' , payload:json})\n\n                    setIsLoading(false)\n\n\n            }\n    \n        }\n\n        return {inscriptionEnt, isLoading, error}\n\n        }\n\n\n\n\n\n\n\n"],"mappings":";AAAA,SAAUA,QAAQ,QAAQ,OAAO;AACjC,SAASC,oBAAoB,QAAQ,wBAAwB;AAK7D,OAAO,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAACQ;EAAQ,CAAC,GAAGP,oBAAoB,CAAC,CAAC;EAGzC,MAAMQ,cAAc,GAAG,MAAAA,CACnBC,cAAc,EACdC,aAAa,EACbC,gBAAgB,EAChBC,SAAS,EACTC,OAAO,EACPC,sBAAsB,KAAI;IACtBR,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMW,QAAQ,GAAI,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACnEC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBZ,cAAc;QACdC,aAAa;QACbC,gBAAgB;QAChBC,SAAS;QACTC,OAAO;QACPC;MAAsB,CAAC;IAC/B,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACZjB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACkB,IAAI,CAACnB,KAAK,CAAC;IACxB;IACA,IAAGY,QAAQ,CAACQ,EAAE,EAAC;MAEPC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAExDf,QAAQ,CAAE;QAACmB,IAAI,EAAC,iBAAiB;QAAGC,OAAO,EAACL;MAAI,CAAC,CAAC;MAElDhB,YAAY,CAAC,KAAK,CAAC;IAG3B;EAEJ,CAAC;EAED,OAAO;IAACE,cAAc;IAAEH,SAAS;IAAEF;EAAK,CAAC;AAEzC,CAAC;AAAAD,EAAA,CAlDID,wBAAwB;EAAA,QAIdD,oBAAoB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}